<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item0" object-name="Workflow:name=generic" id="68df6aef-688a-41c0-b80b-1eb6f81d20fb" editor-version="2.0" version="1.1.2" api-version="6.0.0" allowed-operations="vef" restartMode="1" resumeFromFailedMode="0">
    <display-name>snapshots360</display-name>
    <description>Creates a snapshot of each virtual machine </description>
    <position y="60.0" x="80.0"/>
    <input>
        <param name="inputProperties" type="Properties"/>
        <param name="vm" type="VC:VirtualMachine"/>
    </input>
    <output/>
    <attrib name="activeVM" type="VC:VirtualMachine">
        <value encoded="n"/>
        <description>Virtual machine currently being processed</description>
    </attrib>
    <attrib name="snapName" type="string">
        <value encoded="n"></value>
        <description>Snapshot name. The name need not be unique for this virtual machine. Takes the snapNamePrefix with the date.</description>
    </attrib>
    <attrib name="memory" type="boolean">
        <value encoded="n">false</value>
        <description>If TRUE, the snapshot includes a dump of the internal state of the virtual machine (a memory dump).</description>
    </attrib>
    <attrib name="quiesce" type="boolean">
        <value encoded="n">true</value>
        <description>If TRUE and the virtual machine is powered on when the snapshot is taken, VMware Tools are used to quiesce the file system in the virtual machine.</description>
    </attrib>
    <attrib name="errorCode" type="string">
        <value encoded="n"></value>
        <description>Error code</description>
    </attrib>
    <attrib name="snapNamePrefix" type="string">
        <value encoded="n">autoSnapped</value>
        <description>Prefix for the snapshot name</description>
    </attrib>
    <workflow-item name="item0" out-name="item6" type="task" comparator="0">
        <display-name>Initialize</display-name>
        <script encoded="false">// Retrieve an array of vms contained in the specified Resource Pool
if(childResourcePool){
	allVMs = System.getModule("com.vmware.library.vc.resourcePool").getAllVMsOfResourcePool(resourcePool) ;
}else{
	allVMs = resourcePool.vm;
}
vmCount = allVMs.length;
currentVM = 0;</script>
        <in-binding>
            <bind name="activeVM" type="VC:VirtualMachine" export-name="activeVM"/>
        </in-binding>
        <out-binding>
            <bind name="activeVM" type="VC:VirtualMachine" export-name="activeVM"/>
        </out-binding>
        <position y="100.0" x="40.0"/>
    </workflow-item>
    <workflow-item name="item3" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="90.0" x="540.0"/>
    </workflow-item>
    <workflow-item name="item6" out-name="item8" type="task" comparator="0">
        <display-name>Set VM</display-name>
        <script encoded="false">// Set our activeVM object:
var activeVM = allVMs[currentVM];

var date = new Date();

snapName = snapNamePrefix + " " + date.toGMTString();</script>
        <in-binding>
            <bind name="snapNamePrefix" type="string" export-name="snapNamePrefix"/>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
        </in-binding>
        <out-binding>
            <bind name="activeVM" type="VC:VirtualMachine" export-name="activeVM"/>
            <bind name="snapName" type="string" export-name="snapName"/>
        </out-binding>
        <position y="160.0" x="360.0"/>
    </workflow-item>
    <workflow-item name="item8" out-name="item6" catch-name="item3" throw-bind-name="errorCode" type="link" linked-workflow-id="BD80808080808080808080808080808053C180800122528313869552e41805bb1" comparator="0">
        <display-name>Create a Snapshot</display-name>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="activeVM">
                <description>The VM on which to create a snapshot</description>
            </bind>
            <bind name="name" type="string" export-name="snapName">
                <description>The name for this snapshot. The name need not be unique for this virtual machine. </description>
            </bind>
            <bind name="description" type="string">
                <description>A description for this snapshot. If omitted, a default description may be provided. </description>
            </bind>
            <bind name="memory" type="boolean" export-name="memory">
                <description>If TRUE, a dump of the internal state of the virtual machine (basically a memory dump) is included in the snapshot. </description>
            </bind>
            <bind name="quiesce" type="boolean" export-name="quiesce">
                <description>If TRUE and the virtual machine is powered on when the snapshot is taken, VMware Tools is used to quiesce the file system in the virtual machine.</description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="snapshot" type="VC:VirtualMachineSnapshot">
                <description>The created snapshot</description>
            </bind>
        </out-binding>
        <description>Create a snapshot and return it.</description>
        <position y="100.0" x="380.0"/>
    </workflow-item>
    <workflow-item name="item10" out-name="item6" catch-name="" type="task" comparator="0">
        <display-name>Ignore error if no change before last snapshot</display-name>
        <script encoded="false">// Ignore error if no change before last snapshot
if (errorCode == "Task 'CreateSnapshot_Task' error: Snapshot not taken since the state of the virtual machine has not changed since the last snapshot operation. (Dynamic Script Module name : vim3WaitTaskEnd#20)") {
	System.warn("Virtual machine '" + activeVM.name + "': Snapshot not taken since the state of the virtual machine has not changed since the last snapshot operation.");
} else {
	throw errorCode;
}</script>
        <in-binding>
            <bind name="activeVM" type="VC:VirtualMachine" export-name="activeVM"/>
            <bind name="errorCode" type="string" export-name="errorCode"/>
        </in-binding>
        <out-binding/>
        <description>Ignore error if no change before last snapshot</description>
        <position y="40.0" x="360.0"/>
    </workflow-item>
</ns2:workflow>
